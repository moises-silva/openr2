# r2test program configuration file

# This file works pretty much like Asterisk
# zapata.conf file, the 'channel' parameter
# will create a R2 context with the specified
# range of channels and will take all the
# preceding parameters as configuration.

# No spaces are allowed in parameter definition
# ie: parameter = value will not be properly read
# use parameter=value instead
# Lines starting with '#' or spaces will be IGNORED

# category=<category name>
# valid category names are:
# NATIONAL_SUBSCRIBER
# NATIONAL_PRIORITY_SUBSCRIBER
# INTERNATIONAL_SUBSCRIBER
# INTERNATIONAL_PRIORITY_SUBSCRIBER
category=NATIONAL_SUBSCRIBER

# loglevel=<all,error,warning,debug,notice,cas,mf,stack,nothing>
# error,warning,debug and notice are self-descriptive
# 'cas' is for logging ABCD CAS tx and rx 
# 'mf' is for logging of the Multi Frequency tones
# 'stack' is for very verbose output of the channel and context call stack, only useful
# if you are debugging a crash or want to learn how the library works. The stack logging
# will be only enabled if the openr2 library was compiled with -DOR2_TRACE_STACKS
# You can mix up values, like: loglevel=error,debug,mf to log just error, debug and 
# multi frequency messages
# 'all' is a special value to log all the activity
# 'nothing' is a clean-up value, in case you want to not log any activity for
# a channel or group of channels 
loglevel=all

# callfile=yes|no
# call files useful to debug signaling isssues are dumped in the 
# current directory if this parameter is enabled.
callfiles=no

# R2 variant
# br - brazil
# mx - mexico
# ar - argentina
# itu - ITU
# for a complete list execute command r2test -l
variant=mx

# how much ANI to expect
maxani=10

# how much DNIS to expect
maxdnis=4

# whether or not we want to request ANI first
getanifirst=no

# whether to use the built-in openr2 MF tone generation or 
# DAHDI MF tone generation. DAHDI is faster since 
# it does not require to copy user space buffers to the kernel,
# however this option will only be available when the configure
# script detects DAHDI support for MF R2 tone generation.
usedahdimf=no

# MF threshold in milliseconds. This is the amount
# of time a R2 MF signal is required to be ON or OFF
# after has been detected to be handled. 0 means as 
# soon as we detect a signal we handle it. This aids 
# when a buggy generator or detector causes small 
# false positives
mfthreshold=0

# MF backward timeout in milliseconds
# to use openr2 default just specify
# any negative number or comment this line
mfbacktimeout=-1

# Value in milliseconds for the metering pulse timeout. 
# Metering pulses are sent by some telcos for some R2 variants
# during a call presumably for billing purposes to indicate costs,
# however this pulses use the same signal that is used to indicate
# call hangup, therefore a timeout is sometimes required to distinguish
# between a *real* hangup and a billing pulse that should not
# last more than 500ms, If you experience call drops after some 
# minutes of being stablished try setting a value of some ms here, 
# values greater than 500ms are not recommended.
# BE AWARE that choosing the proper protocol mfcr2_variant parameter
# implicitly sets a good recommended value for this timer, use this
# parameter only when you *really* want to override the default, otherwise
# just comment out this value or put a -1
# Any negative value means 'default'. 
meteringpulsetimeout=-1

# Brazil uses a special calling party category for collect calls (llamadas por cobrar)
# instead of using the operator (as in Mexico). The R2 spec in Brazil says a special GB tone
# should be used to reject collect calls. If you want to ALLOW collect calls specify 'yes',
# if you want to BLOCK collect calls then say 'no'. Default is to block collect calls.
collectcalls=no

# How to accept calls, charge or no charge, that is the question. If you decide to accept
# the calls with charge, then a specific Group B tone will be sent. It is safe
# to leave default if you don't know what this means
chargecalls=yes

# This feature is related but independent of 'collectcalls'
# Some PBX's require a double-answer process to block collect calls, if
# you ever have problems blocking collect calls using Group B signals (collectcalls=no)
# then you may want to try with doubleanswer=yes, this will cause that every answer signal
# is changed by answer->clear back->answer (sort of a flash)
doubleanswer=no

# This feature allows to skip the use of Group B/II signals and go directly
# to the accepted state for incoming calls 
immediateaccept=no

# This option is used to skip the request of the calling party category
# and go to Group II/B signals directly
skipcategory=no

# WARNING: advanced users only! I really mean it
# this parameter is commented by default because
# YOU DON'T NEED IT UNLESS YOU REALLY GROK MFC/R2
# READ COMMENTS on doc/r2proto.conf for more info
# advancedprotocolfile=/path/to/advanced/r2proto.conf

# This feature allows you to play an alaw audio file for inconming/outgoing calls
# You can use Asterisk to get the audio file in the right format, to do so, issue
# file convert <input.format> <output.alaw>
playaudio=no

# If you set playaudio=yes you should provide the path to the audio file
#audiofile=/path/to/audio/file
#audiofile=doc/intro-openr2-es.alaw

# range of channels to configure with previous options
# range is really needed, so if you will test only with 1
# channel you still require to specify it like this: 1-1
# no spaces allowed
channel=1-15
channel=17-31

# destiny number and caller id (only used if caller=yes)
dnid=4321
cid=0987654321

# whether or not the group of channels will start a call to
# the specified dnid
caller=yes

# a new range of chanels. This time the options dnid,cid and caller 
# will be used as well
channel=32-46
channel=48-62

